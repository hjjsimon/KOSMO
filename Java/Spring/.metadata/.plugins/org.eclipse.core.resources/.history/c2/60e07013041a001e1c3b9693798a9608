
/* Drop Tables */

DROP TABLE COMMUNITY_COMMENTS;
DROP TABLE COMMUNITY_MEMO;
DROP TABLE H_RELATED_I;
DROP TABLE H_RELATED_N;
DROP TABLE SELECT_HEALTHISSUE;
DROP TABLE HEALTHISSUE;
DROP TABLE S_RELATED_I;
DROP TABLE INGREDIENT;
DROP TABLE NOTICEBOARD_COMMENTS;
DROP TABLE NOTICEBOARD_MEMO;
DROP TABLE PROFILE_IMAGE;
DROP TABLE QNA_COMMENTS;
DROP TABLE QNA_MEMO;
DROP TABLE SELECT_SUPPLEMENT;
DROP TABLE MEMBER;
DROP TABLE S_RELATED_N;
DROP TABLE NUTRIENT;
DROP TABLE SOCIAL_MEMBER;
DROP TABLE SUPPLEMENT;




/* Create Tables */

CREATE TABLE COMMUNITY_COMMENTS
(
	CC_NO decimal NOT NULL,
	CC_COMMENT nvarchar(200) NOT NULL,
	CC_POSTDATE date DEFAULT CURRENT_TIMESTAMP,
	CM_NO decimal NOT NULL,
	ID varchar(50) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	PRIMARY KEY (CC_NO)
);


CREATE TABLE COMMUNITY_MEMO
(
	CM_NO decimal NOT NULL,
	CM_TITLE nvarchar(50) NOT NULL,
	CM_CONTENT nvarchar(2000) NOT NULL,
	CM_POSTDATE date DEFAULT CURRENT_TIMESTAMP,
	ID varchar(50) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	PRIMARY KEY (CM_NO)
);


CREATE TABLE HEALTHISSUE
(
	H_NAME nvarchar(50) NOT NULL,
	H_NUTRIENT nvarchar(200) NOT NULL,
	H_DESC nvarchar(500) NOT NULL,
	PRIMARY KEY (H_NAME)
);


CREATE TABLE H_RELATED_I
(
	H_NAME nvarchar(50) NOT NULL,
	I_NAME nvarchar(50) NOT NULL,
	UNIQUE (H_NAME, I_NAME)
);


CREATE TABLE H_RELATED_N
(
	H_NAME nvarchar(50) NOT NULL,
	N_NAME nvarchar(50) NOT NULL,
	UNIQUE (H_NAME, N_NAME)
);


CREATE TABLE INGREDIENT
(
	I_NAME nvarchar(50) NOT NULL,
	I_DRI nvarchar(50),
	I_UL nvarchar(50),
	I_FUNC nvarchar(200),
	I_DESC nvarchar(1000),
	I_CAUTION nvarchar(1000),
	PRIMARY KEY (I_NAME)
);


CREATE TABLE MEMBER
(
	ID varchar(50) NOT NULL,
	PWD varchar(50) NOT NULL,
	NAME nvarchar(50) NOT NULL,
	BIRTH date NOT NULL,
	GENDER nvarchar(10) NOT NULL,
	EMAIL varchar(50) NOT NULL,
	SOCIAL nvarchar(10) NOT NULL,
	REGIDATE date DEFAULT CURRENT_TIMESTAMP,
	ACTIVE nvarchar(10) NOT NULL,
	INACTIVE_DATE date,
	SM_EMAIL varchar(50) NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE NOTICEBOARD_COMMENTS
(
	NC_NO decimal NOT NULL,
	NC_COMMENT nvarchar(200) NOT NULL,
	NC_POSTDATE date DEFAULT CURRENT_TIMESTAMP,
	NM_NO decimal NOT NULL,
	ID varchar(50) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	PRIMARY KEY (NC_NO)
);


CREATE TABLE NOTICEBOARD_MEMO
(
	NM_NO decimal NOT NULL,
	NM_TITLE nvarchar(50) NOT NULL,
	NM_CONTENT nvarchar(2000) NOT NULL,
	NM_POSTDATE date DEFAULT CURRENT_TIMESTAMP,
	ID varchar(50) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	PRIMARY KEY (NM_NO)
);


CREATE TABLE NUTRIENT
(
	N_NAME nvarchar(50) NOT NULL,
	N_DRI_M nvarchar(50),
	N_UL_M nvarchar(50),
	N_DRI_F nvarchar(50),
	N_UL_F nvarchar(50),
	N_FUNC nvarchar(200),
	N_DESC nvarchar(1000),
	N_CAUTION nvarchar(1000),
	N_LACK nvarchar(500),
	N_FOOD nvarchar(500),
	PRIMARY KEY (N_NAME)
);


CREATE TABLE PROFILE_IMAGE
(
	PI_NO decimal NOT NULL,
	PI_PATH nvarchar(500) NOT NULL,
	PI_FILENAME nvarchar(500) NOT NULL,
	PI_EXT nvarchar(50) NOT NULL,
	ID varchar(50) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	PRIMARY KEY (PI_NO)
);


CREATE TABLE QNA_COMMENTS
(
	QC_NO decimal NOT NULL,
	QC_COMMENT nvarchar(200) NOT NULL,
	QC_POSTDATE date DEFAULT CURRENT_TIMESTAMP,
	QM_NO decimal NOT NULL,
	ID varchar(50) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	PRIMARY KEY (QC_NO)
);


CREATE TABLE QNA_MEMO
(
	QM_NO decimal NOT NULL,
	QM_TITLE nvarchar(50) NOT NULL,
	QM_CONTENT nvarchar(2000) NOT NULL,
	QM_POSTDATE date DEFAULT CURRENT_TIMESTAMP,
	ID varchar(50) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	PRIMARY KEY (QM_NO)
);


CREATE TABLE SELECT_HEALTHISSUE
(
	SH_NO decimal NOT NULL,
	ID varchar(50) NOT NULL,
	H_NAME nvarchar(50) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	SH_DATE date DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (SH_NO),
	UNIQUE (ID, H_NAME)
);


CREATE TABLE SELECT_SUPPLEMENT
(
	SS_NO decimal NOT NULL,
	ID varchar(50) NOT NULL,
	S_NAME nvarchar(100) NOT NULL,
	SM_EMAIL varchar(50) NOT NULL,
	SS_DATE date DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (SS_NO),
	UNIQUE (ID, S_NAME)
);


CREATE TABLE SOCIAL_MEMBER
(
	SM_EMAIL varchar(50) NOT NULL,
	SM_GENDER nvarchar(10),
	SM_SITE nvarchar(50) NOT NULL,
	SM_UPDATE nvarchar(10),
	SM_NAME nvarchar(50),
	SM_BIRTH date,
	SM_REGIDATE date DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (SM_EMAIL)
);


CREATE TABLE SUPPLEMENT
(
	S_NAME nvarchar(100) NOT NULL,
	S_COMPANY nvarchar(100),
	S_NUM nvarchar(100),
	S_REGIDATE nvarchar(100),
	S_EXPDATE nvarchar(100),
	S_FORM nvarchar(100),
	S_DOSE nvarchar(100),
	S_PACK nvarchar(100),
	S_STORAGE nvarchar(2000),
	S_CAUTION nvarchar(2000),
	S_EFFECT nvarchar(2000),
	S_STANDARD nvarchar(2000),
	PRIMARY KEY (S_NAME)
);


CREATE TABLE S_RELATED_I
(
	S_NAME nvarchar(100) NOT NULL,
	I_NAME nvarchar(50) NOT NULL,
	UNIQUE (S_NAME, I_NAME)
);


CREATE TABLE S_RELATED_N
(
	S_NAME nvarchar(100) NOT NULL,
	N_NAME nvarchar(50) NOT NULL,
	UNIQUE (S_NAME, N_NAME)
);



/* Create Foreign Keys */

ALTER TABLE COMMUNITY_COMMENTS
	ADD FOREIGN KEY (CM_NO)
	REFERENCES COMMUNITY_MEMO (CM_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE H_RELATED_I
	ADD FOREIGN KEY (H_NAME)
	REFERENCES HEALTHISSUE (H_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE H_RELATED_N
	ADD FOREIGN KEY (H_NAME)
	REFERENCES HEALTHISSUE (H_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SELECT_HEALTHISSUE
	ADD FOREIGN KEY (H_NAME)
	REFERENCES HEALTHISSUE (H_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE H_RELATED_I
	ADD FOREIGN KEY (I_NAME)
	REFERENCES INGREDIENT (I_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE S_RELATED_I
	ADD FOREIGN KEY (I_NAME)
	REFERENCES INGREDIENT (I_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMUNITY_COMMENTS
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMUNITY_MEMO
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE NOTICEBOARD_COMMENTS
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE NOTICEBOARD_MEMO
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PROFILE_IMAGE
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QNA_COMMENTS
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QNA_MEMO
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SELECT_HEALTHISSUE
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SELECT_SUPPLEMENT
	ADD FOREIGN KEY (ID)
	REFERENCES MEMBER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE NOTICEBOARD_COMMENTS
	ADD FOREIGN KEY (NM_NO)
	REFERENCES NOTICEBOARD_MEMO (NM_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE H_RELATED_N
	ADD FOREIGN KEY (N_NAME)
	REFERENCES NUTRIENT (N_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE S_RELATED_N
	ADD FOREIGN KEY (N_NAME)
	REFERENCES NUTRIENT (N_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QNA_COMMENTS
	ADD FOREIGN KEY (QM_NO)
	REFERENCES QNA_MEMO (QM_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMUNITY_COMMENTS
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMUNITY_MEMO
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MEMBER
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE NOTICEBOARD_COMMENTS
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE NOTICEBOARD_MEMO
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PROFILE_IMAGE
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QNA_COMMENTS
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QNA_MEMO
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SELECT_HEALTHISSUE
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SELECT_SUPPLEMENT
	ADD FOREIGN KEY (SM_EMAIL)
	REFERENCES SOCIAL_MEMBER (SM_EMAIL)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SELECT_SUPPLEMENT
	ADD FOREIGN KEY (S_NAME)
	REFERENCES SUPPLEMENT (S_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE S_RELATED_I
	ADD FOREIGN KEY (S_NAME)
	REFERENCES SUPPLEMENT (S_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE S_RELATED_N
	ADD FOREIGN KEY (S_NAME)
	REFERENCES SUPPLEMENT (S_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



