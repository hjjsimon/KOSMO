/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.8
 * Generated at: 2023-05-31 11:20:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsoup16;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.Vector;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

public final class Scrapping_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Vector");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("org.jsoup.nodes.Element");
    _jspx_imports_classes.add("org.jsoup.nodes.Document");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("org.jsoup.select.Elements");
    _jspx_imports_classes.add("org.jsoup.Jsoup");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/template/Top.jsp", out, false);
      out.write("\r\n");
      out.write("    <div class=\"container\" style=\"margin-top:50px\">\r\n");
      out.write("        <div class=\"jumbotron bg-info\">\r\n");
      out.write("            <h1>자바언어로 웹 스크래핑 하기(=크롤링)</h1>            \r\n");
      out.write("        </div><!--jumbotron-->\r\n");
      out.write("        <fieldset class=\"form-group border p-3\">\r\n");
      out.write("        	<legend class=\"w-auto px-3\">https://jsoup.org(주소복붙)</legend>\r\n");
      out.write("        	");

	        	Document doc = Jsoup.connect("https://en.wikipedia.org/").get();//JSOUP의 Document 임포트
	        	out.println("<h3 class='display-4'>"+doc.title()+"</h3>");//브라우저 출력
	        
	        	Elements newsHeadlines = doc.select("#mp-itn b a");
	        	//System.out.println(newsHeadlines);//mp-itn 하위 b 하위 a의 헤드라인들 가져옴
	        	out.println("<ul class='list-unstyled'>");
	        	for (Element headline : newsHeadlines) {
	        	  out.println(String.format("<li><a href='%s'>%s</a></li>", headline.absUrl("href"), headline.attr("title")));
	        	}//앞에 https://en.wikipedia.org 도메인 붙여줌
	        	
        		out.println("</ul>");
        	
      out.write("\r\n");
      out.write("        </fieldset>     \r\n");
      out.write("        <fieldset class=\"form-group border p-3\">\r\n");
      out.write("        	<legend class=\"w-auto px-3\">네이버 시리즈온 스크래핑하기(조회순)</legend>\r\n");
      out.write("        	");

        		doc = Jsoup.connect("https://serieson.naver.com/v3/movie/ranking/realtime").get();
        		System.out.println(doc.html());//html소스 쫙 가져옴
	        	//#container > div.RankingPage_ranking_wrap__GB855 > ol > li:nth-child(1) > a > div.Poster_info_area__HGRo_.Poster_margin_left__sLY0L > span
				//#container > div.RankingPage_ranking_wrap__GB855 > ol > li:nth-child(2) > a > div.Poster_info_area__HGRo_.Poster_margin_left__sLY0L > span
        		//규칙 찾기: 구조적으로 보면 ol > li:~~ > a 니까 몇번째 차일드만 지우면 됨, 그러면 영화순위 100개 제목만 다 가져옴
        		
        		Elements lies= doc.select("#container > div.RankingPage_ranking_wrap__GB855 > ol > li");
        		out.println("<ul class=\"list-unstyled\">");
        		int rank=1;
        		for(Element li:lies){
        			String href=li.firstChild().absUrl("href");        			
        			//out.println(li.firstElementChild().firstElementChild().firstElementChild().attr("style")+"<br/>");
        			//out.println(li.firstElementChild().firstElementChild().firstElementChild().html()+"<br/>");//svg로 이미지 소스를 만든다.소스보기시 확인가능
        			String title=li.firstElementChild().firstElementChild().firstElementChild().child(1).child(0).attr("alt");
        			out.println("<li>"+String.format("<a href='%s'><span class='badge badge-danger'>%s</span> %s</a>",href,rank++,title)+"</li>");        		
        		}
        		out.println("</ul>");
        	
      out.write("\r\n");
      out.write("        	\r\n");
      out.write("        \r\n");
      out.write("         </fieldset>     \r\n");
      out.write("    </div><!--container-->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/template/Footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
